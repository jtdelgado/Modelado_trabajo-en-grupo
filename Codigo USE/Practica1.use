model Practica1

----------Clases-----------
class Avion
attributes
    num_kilometros : Integer
end

associationclass Contrato between
    Avion[0..*] role avion
    Aerolinea[1..*] role aerolinea
attributes
    precio_mes : Real
    num_mes : Integer
    precio_total : Real 
            derive : self.precio_mes * self.num_mes
end

class Aerolinea
attributes
    nombre : String
end

class Aeropuerto
end

class Vuelo
attributes
    identificador : String
    num_kilometros : Integer
end

class Ciudad
end

class Persona
attributes
    nombre : String
    edad : Integer
end

class Piloto < Persona
attributes
    num_kilometros : Integer
    piloto_pro : Boolean
       -- derive : self.num_kilometros > --------------FALTA POR PONERLO CUANDO SE HAGA LAS ASOCIACIONES
end

class Pasajero < Persona
end

class Almacen
attributes
    capacidad_max : Integer
end

class Hangar < Almacen
end

class Desguace < Almacen
end


---------Fin de Clases--------

----------Asociaciones---------
association vuelos_avion between
    Vuelo [0..*] role vuelos
    Avion [1] role avion_estado
end

association avion_volando between
    Vuelo [0..1] role volando
    Avion [1] role avion
end

association vueloPilotoPrincipal
    Vuelo [0..*] role vuelosPrincipal
    Piloto [1] role pilotoPrincipal
end

association vueloPilotoSecundario
    Vuelo [0..*] role vuelosSecundario
    Piloto [0..1] role pilotoSecundario
end

association vueloPasajero between
    Vuelo [0..1] role vuelo
    Pasajero [0..*] role pasajeros
end

association aeropuertoCiudad between
    Aeropuerto [0..1] role aeropuertos
    Ciudad [1] role ciudad
end

association aeropuertoHangar between
    Aeropuerto [1] role aeropuerto
    Hangar [1..*] role hangares
end

association aeropuertoDesguace between
    Aeropuerto [1] role aeropuerto
    Desguace [0..1] role desguace
end

association avionDesguace between
    Avion [0..*] role aviones
    Desguace [0..1] role avionRelegado
end

association avionHangar between
    Avion [0..*] role aviones
    Hangar [0..1] role avionEstacionado
end

----------Fin Asociaciones-----

----------Invariantes----------
constraints

context Aerolinea
    inv AerolineaNombreUnico:
        Aerolinea.allInstances() -> forAll(a | a.nombre!=self.nombre)
        --(a.nombre!=self.nombre).implica(a.nombre!=self.nombre)

----------Fin Invariantes------